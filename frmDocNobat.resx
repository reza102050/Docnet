<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdnew.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAE0ElEQVRYR8WVa1BUZRjHjyESFxEWBBRw
        XZRy2V1cbGahWAOFhYWlVYFdQLykDKBi9ilHS25y1QkRSivJFEe7TH3BiRLBC5pNScakNU3pNDZNTh/6
        EOUVwafneZf3uJcDCjvRf+Y/e86773l+z/u8z3mPAAD/qyUHJ9OSg5NpycHJtOTgZNplYPOHi9yyczxy
        Xa9Jt//yKpPUfy6SCjoeOwvHdFuP6/9qOP/CPbw2jwyPLvtgE7G98J7Bf4bDcAM+gW2fPn9vbVv02Ek4
        BxyvufCawX+ANjj2axngFsDX0AwbjsYOFuyTm0amuco54Hi852IujyHCD18rgV0XljG//lU2dN+phuJ2
        1X1rS2QWm+yst79fI3TdqhQ6B15jAZ0ho5nmtlzKo2uCD1yBd+CtK6sZuPELM2APMNefy4Kqk+mwfEd0
        B+KesFHtVH0qXaCOpc6lgI+ThAO8Q/93H7TAG/0FDMzhBMaYUN2TAZZKFRg2RV1EnJeNaicMYqaOpRJS
        wEclweGbjsXFv/yx7p/zsEuEczCHV3UbIRfhxi3zYGnx3A8Q52Ojjqjs/bhlr3Ym36eOpc6lUiJk1CQ4
        vPRIbHzJEc1Ngrd+m+9QbgLXns10gCevlx/38vGYi8gnbWRUabvWur0zeegqtMOhq8Wsc6mJqKRSSXD4
        2gNPxRcdirl97kGjCOdgEY57zuFJL875CHEK9HQ064Epa1rVW7d3Jj3oh30M3vbjOmaexCsd+ptUYp4E
        efeXy4W8FnlC0XsxdwmO/zmUm8A1ZzJG4DEMrl8VeQB5tHIRTpqWU6EcfrO/UATb+2ESibcoiaKDKoFs
        aZIvXn9QOdg73CDCOZjDK7vSRPhzBRFNyJKj/dAO3e9HE1bWaWH/d6vHTGLjUe0dWnV2gzx93bsLhgi+
        9xurQ7kJvPO00R4+nGANr0FOJNoX7fLqzUgri7oxVhLU1WRqMlw989mhehHOwRxeccLA4YO67NnbkBGB
        po53fe9RvvMTZEswiT+ck6CDBPdaPEyo1HhQsfHmPotDuQlsD09/ad7dZ8yztmD8cDTBpxBMSlPRwYpF
        AUsxid8piYJaLey+sELyFJMqNxkPMCj/PJXDb2szQosw7my0N3pUOJcnOnjOwhnJeEJdpySs1WqoPWMS
        wc7dzeEE5vCcciWkb44a0BhCCjFeGJre80fCuSiJoEi1vx6T+IWSsFSpYOepTBEsteqqnjTY8VkKh/+p
        TAqmL1Iomo7Zx4ZzsSTCldOfNWxU/MS2oz4Wak4/XLE9mFzRlQp5tWqgHpofLzPi8yHoCcG5KAlZWLSf
        DivxG0+iusdWag6v7DYweH6dmj4s16mH8LmZ6GnoCcMFayu9MawxgxYaQwtpT21JaKDypIGByeUnUmxw
        rBRtG84PRlPy7snSEi7k7qXmZSsJeToxyMxf0fw6DQMzOJY9dYPiMlUK5wWhPbMaZfSceyJ4TvMsuqQy
        0l7OjFD5L8aVXqMk8mrUzCklij5ZhLcW/w9ETzU1BApkt5W9J4x5RRM1MkuCNaYs3DsupVRxiZLAb3mv
        f4iXBscd4Jn1AXjrphDgYhT1RKBPgKcycWVko2+A5wK8J5qHxFz35ByQG+WBps8oNRv9usBH5v2noo8J
        VUPyozJ+CcK/MWz44r5Xo4sAAAAASUVORK5CYII=
</value>
  </data>
  <data name="mh1.StyleInfo" xml:space="preserve">
    <value>Normal{Font:Tahoma, 8.25pt;Margins:1, 1, 1, 1;}	Alternate{BackColor:White;Margins:1, 0, 0, 0;TextEffect:Flat;TextDirection:Normal;Trimming:None;}	Fixed{BackColor:Control;ForeColor:ControlText;Border:Flat,1,ControlDark,Both;BackgroundImageLayout:Hide;}	Highlight{BackColor:Highlight;ForeColor:HighlightText;}	Focus{}	Editor{}	Search{BackColor:Highlight;ForeColor:HighlightText;}	Frozen{BackColor:Beige;}	NewRow{ForeColor:GrayText;}	EmptyArea{BackColor:AppWorkspace;Border:Flat,1,ControlDarkDark,Both;}	SelectedColumnHeader{}	SelectedRowHeader{}	GrandTotal{BackColor:Black;ForeColor:White;}	Subtotal0{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal1{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal2{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal3{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal4{BackColor:ControlDarkDark;ForeColor:White;}	Subtotal5{BackColor:ControlDarkDark;ForeColor:White;}	FilterEditor{}	FirstCustomStyle{}	</value>
  </data>
</root>